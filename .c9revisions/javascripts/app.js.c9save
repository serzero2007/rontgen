{"ts":1368210703387,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1368210673649,"patch":[[{"diffs":[[1,"var App = App || {};\nvar MathJax = MathJax || {};\n\n// $(function() {\n//     $('.bar').css({'width':'50%'})\n\n// \tApp.go()\n\n// \t$('.bar').css({'width':'100%'})\n\n// \tsetTimeout(function(){\n//         $('.overlay').fadeOut(100)\n// \t},500)\n\n//     MathJax.Hub.Register.StartupHook(\"End\",function () {\n//             $(\".output-show\").hide()\n//             $(\".output-hide\").fadeIn()\n//     });\n\n// });\n\nApp.go = function(){\n\t$.fn.quickdiff(\"filter\", \"mathSpanInline\",\n        function (node) {\n            return (node.nodeName === \"SPAN\" && $(node).hasClass(\"mathInline\"));\n        },\n        function (a, b) {\n            var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n            return (\"%%\" + aHTML + \"%%\") !== bHTML;\n        }\n    );\n\n    // // Setup a filter for comparing math spans.\n    $.fn.quickdiff(\"filter\", \"mathSpan\",\n        function (node) {\n            return (node.nodeName === \"SPAN\" && $(node).hasClass(\"math\"));\n        },\n        function (a, b) {\n            var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n            return (\"$$\" + aHTML + \"$$\") !== bHTML;\n        }\n    );\n\n    $.fn.quickdiff(\"attributes\", {\n        \"td\" : [\"align\"],\n        \"th\" : [\"align\"],\n        \"img\" : [\"src\", \"alt\", \"title\"],\n        \"a\" : [\"href\", \"title\"]\n    });\n\n    var initString = '## [Cheetah.io](http://cheetah.io) demo.\\n\\n'+\n        '> Sign up for the beta [here](http://cheetah.io). \\n\\n'+\n        'You can write LaTex and markdown. To use latex just surround your math in dollar signs. Single dollar sign for inline math and double ``$$`` for centered math.\\n\\n'+\n        '**For example:**\\n\\n'+\n        '$$x = \\\\frac{-b \\\\pm \\\\sqrt{b^2 - 4ac} }{2a}$$\\n\\n'+\n        'Your document is saved to localStorage.\\n\\n'+\n        '__Check out the code for this demo on [Github](http://github.com/eoinmurray/rontgen).__'\n        ;\n\n    if(typeof localStorage.editor === \"undefined\" ) localStorage.editor = initString;\n    if(localStorage.editor === \"\" ) localStorage.editor = initString;\n    var redrawNeeded = false, preproc, renderDelay = 0, timer, content = \"\";\n    var markdown = new Showdown.converter();\n\n    $.extend(markdown.config, {\n        stripHTML: true,\n        tables: true,\n        math: true,\n        figures: true\n    });\n\n    // Redraws the output using the content of the input.\n    var redraw = function () {\n        if (!redrawNeeded) {\n            return;\n        } else {\n            redrawNeeded = false;\n        }\n\n        var startTime = (new Date()).getTime();\n        var data = editor.getSession().getValue();\n    \n        data = data.replace(/\\$+/g, function(match) {\n            return match.length === 1 ? '%%' : match;\n        });\n        localStorage.editor = editor.getSession().getValue()\n        preproc = $(\"<div></div>\").html(markdown.makeHtml(data));\n        var patch = $(\"#output > div\").quickdiff(\"patch\", preproc, [\"mathSpan\", \"mathSpanInline\"]);\n\n        if (patch.type !== \"identical\" && patch.replace.length > 0) {\n            $.each(patch.replace, function (i, el) {\n                if (el.innerHTML) {\n                    MathJax.Hub.Typeset(el, function () {});\n                }\n            });\n        } else {\n        \n        }\n    };\n\n    var suppress_redraw = false;\n    var refreshModified = function() {\n        if (suppress_redraw) return;\n        redrawNeeded = true;\n        modified = editor.getSession().getValue() !== content;\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(redraw, renderDelay);\n    }\n\n    var editor = ace.edit('editor');\n    editor.getSession().setUseWrapMode(true);\n    editor.setHighlightActiveLine(false);\n    editor.renderer.setShowGutter(false);\n\teditor.getSession().on('change', refreshModified);\n    if(localStorage.editor) editor.getSession().setValue(localStorage.editor)\n}\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":3863}]],"length":3863,"saved":false}
{"ts":1368210679414,"patch":[[{"diffs":[[0,"};\n\n"],[-1,"// $(function() {\n//     $('.bar').css({'width':'50%'})\n\n// \tApp.go()\n\n// \t$('.bar').css({'width':'100%'})\n\n// \tsetTimeout(function(){\n//         $('.overlay').fadeOut(100)\n// \t},500)\n\n//     MathJax.Hub.Register.StartupHook(\"End\",function () {\n//             $(\".output-show\").hide()\n//             $(\".output-hide\").fadeIn()\n//     });\n\n// });\n\n"],[0,"App."]],"start1":47,"start2":47,"length1":355,"length2":8}]],"length":3516,"saved":false}
{"ts":1368210763168,"patch":[[{"diffs":[[0,"editor)\n"],[1,"    \n    this.editor = editor\n"],[0,"}\n\n\n"]],"start1":3504,"start2":3504,"length1":12,"length2":42}]],"length":3546,"saved":false}
{"ts":1368210839482,"patch":[[{"diffs":[[0,"ion () {});\n"],[1,"                    $(document).trigger('MathRender')\n"],[0,"            "]],"start1":2804,"start2":2804,"length1":24,"length2":78}]],"length":3600,"saved":false}
{"ts":1368210858345,"patch":[[{"diffs":[[0,"ine\"]);\n"],[1,"        $(document).trigger('MathRender')"],[0,"\n       "]],"start1":2587,"start2":2587,"length1":16,"length2":57}]],"length":3641,"saved":false}
{"ts":1368210863098,"patch":[[{"diffs":[[0,"ument).trigger('"],[-1,"Math"],[1,"Text"],[0,"Render')\n       "]],"start1":2608,"start2":2608,"length1":36,"length2":36}]],"length":3641,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368552159276,"patch":[[{"diffs":[[0,"n (i, el) {\n"],[1,"                console.log($(el).is(\":visible\"))\n"],[0,"            "]],"start1":2748,"start2":2748,"length1":24,"length2":74}]],"length":3691,"saved":false}
{"ts":1368552316869,"patch":[[{"diffs":[[0,"ine\"]);\n"],[1,"        console.log($(\"#output\").height())\n"],[0,"        "]],"start1":2587,"start2":2587,"length1":16,"length2":59},{"diffs":[[0,") {\n"],[-1,"                console.log($(el).is(\":visible\"))\n"],[0,"    "]],"start1":2799,"start2":2799,"length1":58,"length2":8}]],"length":3684,"saved":false}
{"ts":1368552368388,"patch":[[{"diffs":[[0,"n (i, el) {\n"],[1,"                console.log(el.offsetParent)\n"],[0,"            "]],"start1":2791,"start2":2791,"length1":24,"length2":69}]],"length":3729,"saved":false}
{"ts":1368552433901,"patch":[[{"diffs":[[1,"\nfunction elementInViewport2(el) {\n  var top = el.offsetTop;\n  var left = el.offsetLeft;\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n\n  while(el.offsetParent) {\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top < (window.pageYOffset + window.innerHeight) &&\n    left < (window.pageXOffset + window.innerWidth) &&\n    (top + height) > window.pageYOffset &&\n    (left + width) > window.pageXOffset\n  );\n}\n\n"],[0,"var App = Ap"]],"start1":0,"start2":0,"length1":12,"length2":486}]],"length":4203,"saved":false}
{"ts":1368552445645,"patch":[[{"diffs":[[0,"e.log(el"],[-1,".offsetParent"],[1,"ementInViewport2(el)"],[0,")\n      "]],"start1":3299,"start2":3299,"length1":29,"length2":36}]],"length":4210,"saved":false}
{"ts":1368552476183,"patch":[[{"diffs":[[-1,"\nfunction elementInViewport2(el) {\n  var top = el.offsetTop;\n  var left = el.offsetLeft;\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n\n  while(el.offsetParent) {\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top < (window.pageYOffset + window.innerHeight) &&\n    left < (window.pageXOffset + window.innerWidth) &&\n    (top + height) > window.pageYOffset &&\n    (left + width) > window.pageXOffset\n  );\n}"],[0,"\n\nva"]],"start1":0,"start2":0,"length1":476,"length2":4}]],"length":3738,"saved":false}
{"ts":1368552640284,"patch":[[{"diffs":[[-1,"\n\n"],[0,"var App "]],"start1":0,"start2":0,"length1":10,"length2":8},{"diffs":[[0,"]);\n"],[-1,"        console.log($(\"#output\").height())\n"],[0,"    "]],"start1":2591,"start2":2591,"length1":51,"length2":8},{"diffs":[[0,") {\n"],[-1,"                console.log(elementInViewport2(el))\n"],[0,"    "]],"start1":2756,"start2":2756,"length1":60,"length2":8}]],"length":3641,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368620445813,"patch":[[{"diffs":[[-1,"var App = App || {};\nvar MathJax = MathJax || {};\n\nApp.go = function(){\n\t$.fn.quickdiff(\"filter\", \"mathSpanInline\",\n        function (node) {\n            return (node.nodeName === \"SPAN\" && $(node).hasClass(\"mathInline\"));\n        },\n        function (a, b) {\n            var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n            return (\"%%\" + aHTML + \"%%\") !== bHTML;\n        }\n    );\n\n    // // Setup a filter for comparing math spans.\n    $.fn.quickdiff(\"filter\", \"mathSpan\",\n        function (node) {\n            return (node.nodeName === \"SPAN\" && $(node).hasClass(\"math\"));\n        },\n        function (a, b) {\n            var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n            return (\"$$\" + aHTML + \"$$\") !== bHTML;\n        }\n    );\n\n    $.fn.quickdiff(\"attributes\", {\n        \"td\" : [\"align\"],\n        \"th\" : [\"align\"],\n        \"img\" : [\"src\", \"alt\", \"title\"],\n        \"a\" : [\"href\", \"title\"]\n    });\n\n    var initString = '## [Cheetah.io](http://cheetah.io) demo.\\n\\n'+\n        '> Sign up for the beta [here](http://cheetah.io). \\n\\n'+\n        'You can write LaTex and markdown. To use latex just surround your math in dollar signs. Single dollar sign for inline math and double ``$$`` for centered math.\\n\\n'+\n        '**For example:**\\n\\n'+\n        '$$x = \\\\frac{-b \\\\pm \\\\sqrt{b^2 - 4ac} }{2a}$$\\n\\n'+\n        'Your document is saved to localStorage.\\n\\n'+\n        '__Check out the code for this demo on [Github](http://github.com/eoinmurray/rontgen).__'\n        ;\n\n    if(typeof localStorage.editor === \"undefined\" ) localStorage.editor = initString;\n    if(localStorage.editor === \"\" ) localStorage.editor = initString;\n    var redrawNeeded = false, preproc, renderDelay = 0, timer, content = \"\";\n    var markdown = new Showdown.converter();\n\n    $.extend(markdown.config, {\n        stripHTML: true,\n        tables: true,\n        math: true,\n        figures: true\n    });\n\n    // Redraws the output using the content of the input.\n    var redraw = function () {\n        if (!redrawNeeded) {\n            return;\n        } else {\n            redrawNeeded = false;\n        }\n\n        var startTime = (new Date()).getTime();\n        var data = editor.getSession().getValue();\n    \n        data = data.replace(/\\$+/g, function(match) {\n            return match.length === 1 ? '%%' : match;\n        });\n        localStorage.editor = editor.getSession().getValue()\n        preproc = $(\"<div></div>\").html(markdown.makeHtml(data));\n        var patch = $(\"#output > div\").quickdiff(\"patch\", preproc, [\"mathSpan\", \"mathSpanInline\"]);\n        $(document).trigger('TextRender')\n        if (patch.type !== \"identical\" && patch.replace.length > 0) {\n            $.each(patch.replace, function (i, el) {\n                if (el.innerHTML) {\n                    MathJax.Hub.Typeset(el, "],[1,"$(function() {\n\t$('.bar').css({'width':'50%'})\n\n\tvar rontgen = new Rontgen()\n\trontgen.start()\n\n\t$('.bar').css({'width':'100%'})\n\n\tsetTimeout(function(){\n        $('.overlay').fadeOut(100)\n\t},500)\n    \n    if (!localStorage.editor) localStorage.editor = ''\n\n    MathJax.Hub.Register.StartupHook(\"End\","],[0,"func"]],"start1":0,"start2":0,"length1":2844,"length2":304},{"diffs":[[0,"ion () {"],[-1,"});\n     "],[1,"\n"],[0,"        "]],"start1":305,"start2":305,"length1":25,"length2":17},{"diffs":[[0,"    "],[-1,"   $(document).trigger('MathRender')\n                }\n            });\n        } else {\n        \n        }\n    };\n\n    var suppress_redraw = false;\n    var refreshModified = function() {\n        if (suppress_redraw) return;\n        redrawNeeded = true;\n        modified = editor.getSession().getValue() !== content;\n        if (timer) {\n            clearTimeout(timer);\n  "],[1,"$(\".output-show\").hide()\n"],[0,"     "],[-1," }\n"],[0,"       "],[-1," timer = setTimeout(redraw, renderDelay);\n    }\n\n    var editor = ace.edit('editor');\n    editor.getSession().setUseWrapMode(true);\n    editor.setHighlightActiveLine(false);\n    editor.renderer.setShowGutter(false);\n\teditor.getSession().on('change', refreshModified);\n    if(localStorage.editor) editor.getSession().setValue(localStorage.editor)\n    \n    this.editor = editor\n}\n\n"],[1,"$(\".output-hide\").fadeIn()\n    });\n\n});"],[0,"\n"]],"start1":322,"start2":322,"length1":771,"length2":81}]],"length":403,"saved":false}
{"ts":1368620497252,"patch":[[{"diffs":[[0,"\n    if "],[1,"(typeof localStorage.editor === \"undefined\") localStorage.editor = null;\n    if"],[0,"(!localS"]],"start1":200,"start2":200,"length1":16,"length2":95},{"diffs":[[0,"r = "],[-1,"''"],[1,"initString;\n    \n    "],[0,"\n\n  "]],"start1":328,"start2":328,"length1":10,"length2":29}]],"length":501,"saved":false}
{"ts":1368620526140,"patch":[[{"diffs":[[0,"tring;\n    \n"],[1,"    rontgen.editor.getSession().setValue(localStorage.editor)\n    \n"],[0,"    \n\n    Ma"]],"start1":337,"start2":337,"length1":24,"length2":91}]],"length":568,"saved":false}
{"ts":1368620534519,"patch":[[{"diffs":[[0,"},500)\n    \n"],[1,"    var initString = 'howdy'\n    \n"],[0,"    if (type"]],"start1":189,"start2":189,"length1":24,"length2":58}]],"length":602,"saved":false}
{"ts":1368620601433,"patch":[[{"diffs":[[0,"ditor)\n    \n"],[1,"    rontgen.editor.getSession().on('change', function(){\n        localStorage.editor = rontgen.editor.getSession().getValue()\n    });\n"],[0,"    \n\n    Ma"]],"start1":438,"start2":438,"length1":24,"length2":158}]],"length":736,"saved":false}
{"ts":1368620627447,"patch":[[{"diffs":[[0,"g = "],[-1,"'howdy'"],[1,"[\n    \n    ].join('\\n\\n');"],[0,"\n   "]],"start1":218,"start2":218,"length1":15,"length2":34}]],"length":755,"saved":false}
{"ts":1368621932778,"patch":[[{"diffs":[[0,"ing = [\n    "],[1,"'# Rontgen.js',\n    'This is a demo for [Cheetah.io].',\n    'This editor renders [markdown] and [Tex-math]. Single dollars enclose inline mathematics $\\alpha^2 +\\beta^2 = 1$. Double dollars enclose centered math.',\n    '$$\\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$$',\n    'The source for this demo is on __[Github]__.',\n    '[Cheetah.io]:http://cheetah.io',\n    '[markdown]:http://daringfireball.net/projects/markdown/',\n    '[Tex-math]:http://www.latex-project.org',\n    '[Github]:http://github.com/eoinmurray/rontgen',"],[0,"\n    ].join("]],"start1":216,"start2":216,"length1":24,"length2":537}]],"length":1268,"saved":false}
{"ts":1368621955544,"patch":[[{"diffs":[[0,"atics $\\"],[1,"\\"],[0,"alpha^2 "]],"start1":372,"start2":372,"length1":16,"length2":17},{"diffs":[[0,"lpha^2 +"],[1," \\"],[0,"\\beta^2 "]],"start1":382,"start2":382,"length1":16,"length2":18},{"diffs":[[0,"'$$\\"],[1,"\\"],[0,"frac{-b "],[1,"\\"],[0,"\\pm "],[1,"\\"],[0,"\\sqr"]],"start1":450,"start2":450,"length1":20,"length2":23}]],"length":1274,"saved":false}
{"ts":1368622062920,"patch":[[{"diffs":[[0,"join('\\n"],[-1,"\\n"],[0,"');\n    "]],"start1":754,"start2":754,"length1":18,"length2":16}]],"length":1272,"saved":false}
{"ts":1368622070641,"patch":[[{"diffs":[[0,"ntgen.js"],[1,"\\n"],[0,"',\n    '"]],"start1":233,"start2":233,"length1":16,"length2":18},{"diffs":[[0,"tah.io]."],[1,"\\n"],[0,"',\n    '"]],"start1":275,"start2":275,"length1":16,"length2":18},{"diffs":[[0,"ed math."],[1,"\\n"],[0,"',\n    '"]],"start1":439,"start2":439,"length1":16,"length2":18}]],"length":1278,"saved":false}
{"ts":1368622074482,"patch":[[{"diffs":[[0,"}}{2a}$$"],[1,"\\n"],[0,"',\n    '"]],"start1":490,"start2":490,"length1":16,"length2":18},{"diffs":[[0,"thub]__."],[1,"\\n"],[0,"',\n    '"]],"start1":544,"start2":544,"length1":16,"length2":18}]],"length":1282,"saved":false}
