{"ts":1368818862452,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Rontgen = Rontgen || function(){};\nvar MathJax = MathJax || null;\n\nRontgen.prototype.start = function(){\n    var self = this;\n    _.extend(this, Backbone.Events);\n    this\n        .initializeQuickDiff()\n        .initializeMarkdown()\n        .initializeRender()\n        .initializeEditor()\n\n    this.renderOn = true;\n\n    this.editor.getSession().on('change', function(){\n        self.handleEditorChange()\n    });\n    this.handleEditorChange()\n}\n\nRontgen.prototype.initLocalStorage = function(initString){\n    var self = this;\n    if (typeof localStorage.editor === \"undefined\") localStorage.editor = null;\n    if(!localStorage.editor) localStorage.editor = initString;\n    this.editor.getSession().setValue(localStorage.editor);\n    this.editor.getSession().on('change', function(){\n        localStorage.editor = self.editor.getSession().getValue();\n    });    \n};\n\n\nRontgen.prototype.getEditorData = function(){\n    return this.editor.getSession().getValue()\n}\n\nRontgen.prototype.setEditorData = function(data){\n    return this.editor.getSession().setValue(data)\n}\n\nRontgen.prototype.initializeQuickDiff = function(){\n    $.fn.quickdiff(\"filter\", \"mathSpanInline\", function (node) {\n        return (node.nodeName === \"SPAN\" && $(node).hasClass(\"mathInline\"));\n    }, function (a, b) {\n        var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n        return (\"%%\" + aHTML + \"%%\") !== bHTML;\n    });\n\n    $.fn.quickdiff(\"filter\", \"mathSpan\", function (node) {\n        return (node.nodeName === \"SPAN\" && $(node).hasClass(\"math\"));\n    }, function (a, b) {\n        var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n        return (\"$$\" + aHTML + \"$$\") !== bHTML;\n    });\n\n    return this;\n}\n\nRontgen.prototype.initializeMarkdown = function () {\n    this.showdown = new Showdown.converter();\n    $.extend(this.showdown.config, {\n        stripHTML: true,\n        tables: true,\n        math: true,\n        figures: true\n    });\n\n    return this;\n}\n\nRontgen.prototype.initializeRender = function(){\n    this.$render = $('.render')\n    var box = {};\n    box.top = this.$render.position().top\n    box.left = this.$render.position().left\n    box.bottom = box.top + this.$render.height()\n    box.right = box.left + this.$render.width()\n\n    this.box = box;\n    return this;\n}\n\nRontgen.prototype.inView = function (el) {\n    return this.box.bottom*1.2 > $(el).position().top\n}\n\nRontgen.prototype.initializeEditor = function () {\n    this.editor = ace.edit('editor');\n    this.editor.getSession().setUseWrapMode(true);\n    this.editor.setHighlightActiveLine(false);\n    this.editor.renderer.setShowGutter(false);\n\n    return this;\n}\n\n\nRontgen.prototype.handleEditorChange = function(){\n    if(!this.renderOn) return;\n    else this.redraw()\n    return this;\n}\n\n\n\nRontgen.prototype.markdown = function (data) {\n    return this.showdown.makeHtml(data);\n}\n\nRontgen.prototype.mathjax = function(el){\n    var self = this;\n    if(!MathJax) return this;\n    MathJax.Hub.Typeset(el, function(){\n        if(el.className === 'math') self.trigger('math')\n        if(el.className === 'mathInline') self.trigger('mathInline')\n    });\n    return this;\n}\n\n\nRontgen.prototype.redraw = function () {\n    var self = this;\n\n    var data = this.getEditorData();\n    data = data.replace(/\\$+/g, function(match) {\n        return match.length === 1 ? '%%' : match;\n    });\n\n    var preproc = $(\"<div></div>\").html(self.markdown(data));\n\n    var patch = $(\"#output > div\").quickdiff(\"patch\", preproc, [\"mathSpan\", \"mathSpanInline\"]);\n\n    if (patch.type !== \"identical\" && patch.replace.length > 0) {\n        $.each(patch.replace, function (i, el) {\n            if (el.innerHTML) self.mathjax(el);\n        });\n    }\n\n    return this;\n\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":3750}]],"length":3750}
{"contributors":[],"silentsave":false,"ts":1368818810158,"patch":[[{"diffs":[[0,"\n       "],[1," //"],[0," stripHT"]],"start1":1874,"start2":1874,"length1":16,"length2":19}]],"length":3753,"saved":false}
