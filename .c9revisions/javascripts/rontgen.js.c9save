{"ts":1368811565681,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Rontgen = Rontgen || function(){};\nvar MathJax = MathJax || {};\n\nRontgen.prototype.start = function(){\n    var self = this;\n    _.extend(this, Backbone.Events);\n    this\n        .initializeQuickDiff()\n        .initializeMarkdown()\n        .initializeRender()\n        .initializeEditor()\n\n    this.renderOn = true;\n\n    this.editor.getSession().on('change', function(){\n        self.handleEditorChange()\n    });\n    this.handleEditorChange()\n}\n\nRontgen.prototype.getEditorData = function(){\n    return this.editor.getSession().getValue()\n}\n\nRontgen.prototype.setEditorData = function(data){\n    return this.editor.getSession().setValue(data)\n}\n\nRontgen.prototype.initializeQuickDiff = function(){\n    $.fn.quickdiff(\"filter\", \"mathSpanInline\", function (node) {\n        return (node.nodeName === \"SPAN\" && $(node).hasClass(\"mathInline\"));\n    }, function (a, b) {\n        var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n        return (\"%%\" + aHTML + \"%%\") !== bHTML;\n    });\n\n    $.fn.quickdiff(\"filter\", \"mathSpan\", function (node) {\n        return (node.nodeName === \"SPAN\" && $(node).hasClass(\"math\"));\n    }, function (a, b) {\n        var aHTML = $.trim($(\"script\", a).html()), bHTML = $.trim($(b).html());\n        return (\"$$\" + aHTML + \"$$\") !== bHTML;\n    });\n\n    return this;\n}\n\nRontgen.prototype.initializeMarkdown = function () {\n    this.showdown = new Showdown.converter();\n    $.extend(this.showdown.config, {\n        stripHTML: true,\n        tables: true,\n        math: true,\n        figures: true\n    });\n\n    return this;\n}\n\nRontgen.prototype.initializeRender = function(){\n    this.$render = $('.render')\n    var box = {};\n    box.top = this.$render.position().top\n    box.left = this.$render.position().left\n    box.bottom = box.top + this.$render.height()\n    box.right = box.left + this.$render.width()\n\n    this.box = box;\n    return this;\n}\n\nRontgen.prototype.inView = function (el) {\n    return this.box.bottom*1.2 > $(el).position().top\n}\n\nRontgen.prototype.initializeEditor = function () {\n    this.editor = ace.edit('editor');\n    this.editor.getSession().setUseWrapMode(true);\n    this.editor.setHighlightActiveLine(false);\n    this.editor.renderer.setShowGutter(false);\n\n    return this;\n}\n\n\nRontgen.prototype.handleEditorChange = function(){\n    if(!this.renderOn) return;\n    else this.redraw()\n    return this;\n}\n\n\n\nRontgen.prototype.markdown = function (data) {\n    return this.showdown.makeHtml(data);\n}\n\n\nRontgen.prototype.redraw = function () {\n    var self = this;\n\n    var data = this.getEditorData();\n    data = data.replace(/\\$+/g, function(match) {\n        return match.length === 1 ? '%%' : match;\n    });\n\n    var preproc = $(\"<div></div>\").html(self.markdown(data));\n\n    var patch = $(\"#output > div\").quickdiff(\"patch\", preproc, [\"mathSpan\", \"mathSpanInline\"]);\n\n    if (patch.type !== \"identical\" && patch.replace.length > 0) {\n        $.each(patch.replace, function (i, el) {\n            if (el.innerHTML) {\n                MathJax.Hub.Typeset(el, function(){\n                    if(el.className === 'math') self.trigger('math')\n                    if(el.className === 'mathInline') self.trigger('mathInline')\n                });\n            }\n        });\n    }\n\n    return this;\n\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":3260}]],"length":3260}
{"contributors":[],"silentsave":false,"ts":1368811513780,"patch":[[{"diffs":[[0,"hJax || "],[-1,"{}"],[1,"null"],[0,";\n\nRontg"]],"start1":56,"start2":56,"length1":18,"length2":20}]],"length":3262,"saved":false}
{"ts":1368811523689,"patch":[[{"diffs":[[0,"        "],[1," if(MathJax)"],[0," MathJax"]],"start1":2993,"start2":2993,"length1":16,"length2":28}]],"length":3274,"saved":false}
{"ts":1368811554414,"patch":[[{"diffs":[[0,"l(data);\n}\n\n"],[1,"Rontgen.prototype.mathjax = function(el){\n    if(MathJax) MathJax.Hub.Typeset(el, function(){\n        if(el.className === 'math') self.trigger('math')\n        if(el.className === 'mathInline') self.trigger('mathInline')\n    });   \n}\n\n"],[0,"\nRontgen.pro"]],"start1":2457,"start2":2457,"length1":24,"length2":258},{"diffs":[[0,") {\n"],[-1,"                if(MathJax) MathJax.Hub.Typeset(el, function(){\n                    if(el.className === 'math') self.trigger('math')\n                    if(el.className === 'mathInline') self.trigger('mathInline')\n                });"],[0,"\n   "]],"start1":3216,"start2":3216,"length1":241,"length2":8}]],"length":3275,"saved":false}
{"ts":1368811576258,"patch":[[{"diffs":[[0," if("],[1,"!"],[0,"MathJax)"],[1," return \n   "],[0," Mat"]],"start1":2514,"start2":2514,"length1":16,"length2":29},{"diffs":[[0,"ML) "],[-1,"{\n\n            }"],[1,"self.mathjax(el)"],[0,"\n   "]],"start1":3227,"start2":3227,"length1":24,"length2":24}]],"length":3288,"saved":false}
{"ts":1368811582120,"patch":[[{"diffs":[[0,"hjax(el)"],[1,";"],[0,"\n       "]],"start1":3239,"start2":3239,"length1":16,"length2":17}]],"length":3289,"saved":false}
{"ts":1368811590173,"patch":[[{"diffs":[[0,"on(el){\n"],[1,"    var self = this;\n"],[0,"    if(!"]],"start1":2503,"start2":2503,"length1":16,"length2":37}]],"length":3310,"saved":false}
{"ts":1368811593882,"patch":[[{"diffs":[[0," return "],[1,"this;"],[0,"\n    Mat"]],"start1":2548,"start2":2548,"length1":16,"length2":21}]],"length":3315,"saved":false}
{"ts":1368811604510,"patch":[[{"diffs":[[0,"\n    });"],[1,"\n"],[0,"   "],[1," return this;"],[0,"\n}\n\n\nRon"]],"start1":2727,"start2":2727,"length1":19,"length2":33}]],"length":3329,"saved":false}
